=============================
GDC test sample:
=============================
for(int i=2;i<100;i++)
{
 a[i]=b[i+2]+7;
 b[i*2+1]=a[i-1]+C[i+1];
}

==============================
fission sample:
=============================

for (i = 0; i < 100; i++){
  a[i] = 1; 
  b[i] = 2;
}

------- advanced ----------
for(i = 0; i < 100; i++){
  a[i] = 1;
  b[i] = a[i];
  c[i+1] = a[i+2];
}
==============================
fusion sample:
=============================
  for (i = 0; i < 100; i++){
    a[i] = 1;
  }
  for (i = 0; i < 10; i++){
    b[i] = 2;
  }
  for (i = 0; i < 100; i++){
    b[i] = 2;
  }                   
  for (i = 0; i < 10; i++){
    b[i] = 2;
  }

------- advanced ----------
  for (i = 0; i < 100; i++){
    a[i] = 1;
  }
  for (i = 0; i < 10; i++){
    b[i+1] = b[i+3];
  }
  for (i = 0; i < 100; i++){
    b[i] = 2;
  }                   
  for (i = 0; i < 10; i++){
    b[i] = 2;
  }

=============================
Unrolling sample:
=============================
int sum = 0;
for(i=0;i<100;i++){
	sum += a[i];
}
------- advanced ----------
int sum= 0, pocket = 0, hat = 0;
for(i=0;i<19;i++){
	sum += a[i];
	pocket += c[i];
	hat += b[k];
}


=============================
interchange sample:
=============================
for (i = 0; i < 300; i++){
	for (j = 0; j < 300; j++){
		x[i][j] = y[i][j];
	}
}

------- advanced ----------
int offset = 55;
for (i = 0; i < 300; i++){
   for (j = 0; j < 300; j++){
      x[i][j] = x[i+10][j] + offset;
   }
}

=============================
skewing sample:
=============================
for(i = 1; i < 7; i++){
   for (j = 1; j < 6; j++){
      x[i][j] = x[i-1][j] + x[i][j-1];
   }
}

=============================
inversion sample:
=============================
i = 0;
while (i<100){
	a[i]=0;
	i++;
}
-------- or -------------
int sum  = 0;
for (i=0; i < 100; i++) {
	sum += a[i];
	i++;
}

=============================
reversal sample:
=============================
for (i=0; i<7; i++){
	a[i]=b[i]+1;
	c[i]=a[i]/2;
}